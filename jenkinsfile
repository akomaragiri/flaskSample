pipeline {
  
  agent any
  
  stages {
	stage('Build') {
      steps {
        sh 'docker build -t akomaragiri/flask:latest .'
      }
    }
    stage('Publish') {
      steps {
        withDockerRegistry([ credentialsId: "docker-hub-credentials", url: "" ]) {
          sh 'docker push akomaragiri/flask:latest'
        }
      }
    }
	stage('Deploy') {
      steps {
		sh '''
			echo '${env.S3_BUCKET}'
			echo '${env.BUILD_NUMBER}'
			aws s3 cp webapp.zip s3://${env.S3_BUCKET}/FlaskApp/webapp.zip
            aws elasticbeanstalk create-application-version --application-name FlaskApp --source-bundle S3Bucket="${env.S3_BUCKET}",S3Key="FlaskApp/webapp.zip"
			aws elasticbeanstalk update-environment --environment-name Flaskapp-env --version-label v${env.BUILD_NUMBER}
        '''
      }
    }
  }
}
