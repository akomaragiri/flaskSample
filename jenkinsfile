pipeline {
  
  agent any
  
  stages {
	stage('Build') {
      steps {
        sh 'docker build -t akomaragiri/flask:latest .'
      }
    }
    
	stage('Publish') {
      steps {
        withDockerRegistry([ credentialsId: "docker-hub-credentials", url: "" ]) {
          sh 'docker push akomaragiri/flask:latest'
        }
      }
    }
	
	stage('Deploy') {
      steps {
		sh "printenv | grep PATH"
		bat "7z a webapp.zip ."
		bat "aws s3 cp webapp.zip s3://${env.S3_BUCKET}/FlaskApp/webapp.zip"
		bat "aws elasticbeanstalk create-application-version --application-name FlaskApp --source-bundle S3Bucket=\"${env.S3_BUCKET}\",S3Key=\"FlaskApp/webapp.zip\" --version-label v${env.BUILD_NUMBER}"
		bat "aws elasticbeanstalk update-environment --environment-name Flaskapp-env --version-label v${env.BUILD_NUMBER}"
      }
    }
  }
}
